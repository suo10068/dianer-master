server:
  port: 8080
  session-timeout: 60 # session最大超时时间(分钟)，默认为30
  tomcat:
    max-threads: 100 # tomcat最大线程数，默认为200
    uri-encoding: UTF-8 # tomcat的URI编码
  servlet:
    context-path: /seckill

#spring boot从控制台打印出来的日志级别只有ERROR, WARN 还有INFO，如果你想要打印debug级别的日志
#debug=true
logging:
  level:
    root: INFO
#dev tools
devtools:
  livereload:
    enabled: true

spring:
  thymeleaf:
    mode: LEGACYHTML5
    cache: false
    cache-period: 0
    template.cache: false

  # 静态文件请求匹配方式
  mvc:
    static-path-pattern: /**

  datasource:
    url: jdbc:mysql://127.0.0.1:3306/mydb?characterEncoding=utf-8&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver

  jpa:
    database: MYSQL # Specify the DBMS
    show-sql: false # Show or not log for each sql query
    hibernate:
      ddl-auto: update
      naming:
        strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
      dialect: org.hibernate.dialect.MySQL5Dialect

  redis:
    database: 0
    host: 115.28.136.78
    port: 6379
    password: Aa123456
    timeout: 30000
    pool:
      max-active: 8
      max-wait: -1
      max-idle: 8
      min-idle: 0

  session:
    store-type: redis

  #kafka相关配置
  kafka:
    bootstrap-servers: 115.28.136.78:9092
    consumer:
      group-id: 0 #设置一个默认组
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer #key-value序列化反序列化
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      batch-size: 65536 #每次批量发送消息的数量
      buffer-memory: 524288

  #freemarker(用于商品静态页生成简化版)
  freemarker:
    template-loader-path: classpath:/static/template/
    suffix: .flt
    enabled: true
    cache: false
    charset: UTF-8
    content-type: text/html
    allow-request-override: false
    check-template-location: true
    expose-request-attributes: false
    expose-session-attributes: false
    expose-spring-macro-helpers: false
    html:
      path: D://file// #商品静态页(自定义映射路径)


# redisson lock
redisson:
  address: redis://115.28.136.78:6379
  password: Aa123456

#zookeeper.address
zookeeper:
  address: 115.28.136.78:2181



# 特别注意：我们通过添加 spring-boot-starter-activemq 依赖即可默认采用内嵌的activeMQ，
# 在生产环境下个人认为尽量还是采用外部服务，提高扩展性和维护性。
# activemq 基础配置
#spring.activemq.broker-url=tcp://47.94.232.109:61616
# 生产环境设置密码
#spring.activemq.user=admin
#spring.activemq.password=123456
#spring.activemq.in-memory=true
#spring.activemq.pool.enabled=false

# 验证码参数(自行替换)
qq:
  captcha:
    url: https://ssl.captcha.qq.com/ticket/verify
    aid: 20426***
    AppSecretKey: 0OsIkPt******

# 监控的HTTP端口
management:
  port: 28806
  security:
    enabled: false # 忽略拦截
# 当前应用信息
info:
  app:
    version: v1.0.0
    name: 爪哇笔记
    email: 345849402@qq.com
    url: https://blog.52itstyle.vip

#开启shutdown远程关闭功能
endpoints:
  shutdown:
    enabled: true

#访问：http://localhost:28806/shutdown   关闭服务
#关闭metrics功能
#endpoints.metrics.enabled=false
#设置beansId
#endpoints.beans.id=mybean
#设置beans路径
#endpoints.beans.path=/bean
#关闭beans 功能
#endpoints.beans.enabled=false
#关闭所有的
#endpoints.enabled=false
#开启单个beans功能
#endpoints.beans.enabled=true
#所有访问添加根目录
#management.context-path=/manage